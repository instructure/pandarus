{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://canvas.instructure.com/api",
  "resourcePath": "/account authentication services",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/v1/accounts/{account_id}/account_authorization_configs",
      "description": "Returns the list of authorization configs",
      "operations": [
        {
          "method": "GET",
          "summary": "List Authorization Configs",
          "notes": "Returns the list of authorization configs",
          "nickname": "list_authorization_configs",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "array",
          "items": {
            "$ref": "AccountAuthorizationConfig"
          }
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/account_authorization_configs",
      "description": "Add external account authentication service(s) for the account.\nServices may be CAS, SAML, or LDAP.\n\nEach authentication service is specified as a set of parameters as\ndescribed below. A service specification must include an 'auth_type'\nparameter with a value of 'cas', 'saml', or 'ldap'. The other recognized\nparameters depend on this auth_type; unrecognized parameters are discarded.\nService specifications not specifying a valid auth_type are ignored.\n\nAny service specification may include an optional 'login_handle_name'\nparameter. This parameter specifies the label used for unique login\nidentifiers; for example: 'Login', 'Username', 'Student ID', etc. The\ndefault is 'Email'.\n\nYou can set the 'position' for any configuration. The config in the 1st position\nis considered the default.\n\nFor CAS authentication services, the additional recognized parameters are:\n\n- auth_base\n\n  The CAS server's URL.\n\n- log_in_url [Optional]\n\n  An alternate SSO URL for logging into CAS. You probably should not set\n  this.\n\nFor SAML authentication services, the additional recognized parameters are:\n\n- idp_entity_id\n\n  The SAML IdP's entity ID - This is used to look up the correct SAML IdP if\n  multiple are configured\n\n- log_in_url\n\n  The SAML service's SSO target URL\n\n- log_out_url\n\n  The SAML service's SLO target URL\n\n- certificate_fingerprint\n\n  The SAML service's certificate fingerprint.\n\n- change_password_url [Optional]\n\n  Forgot Password URL. Leave blank for default Canvas behavior.\n\n- identifier_format\n\n  The SAML service's identifier format. Must be one of:\n\n  - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n  - urn:oasis:names:tc:SAML:2.0:nameid-format:entity\n  - urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos\n  - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\n  - urn:oasis:names:tc:SAML:2.0:nameid-format:transient\n  - urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\n  - urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName\n  - urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName\n\n- requested_authn_context\n\n  The SAML AuthnContext\n\nFor LDAP authentication services, the additional recognized parameters are:\n\n- auth_host\n\n  The LDAP server's URL.\n\n- auth_port [Optional, Integer]\n\n  The LDAP server's TCP port. (default: 389)\n\n- auth_over_tls [Optional]\n\n  Whether to use TLS. Can be '', 'simple_tls', or 'start_tls'. For backwards\n  compatibility, booleans are also accepted, with true meaning simple_tls.\n  If not provided, it will default to start_tls.\n\n- auth_base [Optional]\n\n  A default treebase parameter for searches performed against the LDAP\n  server.\n\n- auth_filter\n\n  LDAP search filter. Use !{{login}} as a placeholder for the username\n  supplied by the user. For example: \"(sAMAccountName=!{{login}})\".\n\n- identifier_format [Optional]\n\n  The LDAP attribute to use to look up the Canvas login. Omit to use\n  the username supplied by the user.\n\n- auth_username\n\n  Username\n\n- auth_password\n\n  Password\n\n- change_password_url [Optional]\n\n  Forgot Password URL. Leave blank for default Canvas behavior.\n\n- account_authorization_config[n] (deprecated)\n  The nth service specification as described above. For instance, the\n  auth_type of the first service is given by the\n  account_authorization_config[0][auth_type] parameter. There must be\n  either a single CAS or SAML specification, or one or more LDAP\n  specifications. Additional services after an initial CAS or SAML service\n  are ignored; additional non-LDAP services after an initial LDAP service\n  are ignored.\n\n_Deprecated_ Examples:\n\nThis endpoint still supports a deprecated version of setting the authorization configs.\nIf you send data in this format it is considered a snapshot of how the configs\nshould be setup and will clear any configs not sent.\n\nSimple CAS server integration.\n\n  account_authorization_config[0][auth_type]=cas&\n  account_authorization_config[0][auth_base]=cas.mydomain.edu\n\nSingle SAML server integration.\n\n  account_authorization_config[0][idp_entity_id]=http://idp.myschool.com/sso/saml2\n  account_authorization_config[0][log_in_url]=saml-sso.mydomain.com&\n  account_authorization_config[0][log_out_url]=saml-slo.mydomain.com&\n  account_authorization_config[0][certificate_fingerprint]=1234567890ABCDEF&\n  account_authorization_config[0][identifier_format]=urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n\nTwo SAML server integration with discovery url.\n\n  discovery_url=http://www.myschool.com/sso/identity_provider_selection\n  account_authorization_config[0][idp_entity_id]=http://idp.myschool.com/sso/saml2&\n  account_authorization_config[0][log_in_url]=saml-sso.mydomain.com&\n  account_authorization_config[0][log_out_url]=saml-slo.mydomain.com&\n  account_authorization_config[0][certificate_fingerprint]=1234567890ABCDEF&\n  account_authorization_config[0][identifier_format]=urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress&\n  account_authorization_config[1][idp_entity_id]=http://idp.otherschool.com/sso/saml2&\n  account_authorization_config[1][log_in_url]=saml-sso.otherdomain.com&\n  account_authorization_config[1][log_out_url]=saml-slo.otherdomain.com&\n  account_authorization_config[1][certificate_fingerprint]=ABCDEFG12345678789&\n  account_authorization_config[1][identifier_format]=urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n\nSingle LDAP server integration.\n\n  account_authorization_config[0][auth_type]=ldap&\n  account_authorization_config[0][auth_host]=ldap.mydomain.edu&\n  account_authorization_config[0][auth_filter]=(sAMAccountName={{login}})&\n  account_authorization_config[0][auth_username]=username&\n  account_authorization_config[0][auth_password]=password\n\nMultiple LDAP server integration.\n\n  account_authorization_config[0][auth_type]=ldap&\n  account_authorization_config[0][auth_host]=faculty-ldap.mydomain.edu&\n  account_authorization_config[0][auth_filter]=(sAMAccountName={{login}})&\n  account_authorization_config[0][auth_username]=username&\n  account_authorization_config[0][auth_password]=password&\n  account_authorization_config[1][auth_type]=ldap&\n  account_authorization_config[1][auth_host]=student-ldap.mydomain.edu&\n  account_authorization_config[1][auth_filter]=(sAMAccountName={{login}})&\n  account_authorization_config[1][auth_username]=username&\n  account_authorization_config[1][auth_password]=password",
      "operations": [
        {
          "method": "POST",
          "summary": "Create Authorization Config",
          "notes": "Add external account authentication service(s) for the account.\nServices may be CAS, SAML, or LDAP.\n\nEach authentication service is specified as a set of parameters as\ndescribed below. A service specification must include an 'auth_type'\nparameter with a value of 'cas', 'saml', or 'ldap'. The other recognized\nparameters depend on this auth_type; unrecognized parameters are discarded.\nService specifications not specifying a valid auth_type are ignored.\n\nAny service specification may include an optional 'login_handle_name'\nparameter. This parameter specifies the label used for unique login\nidentifiers; for example: 'Login', 'Username', 'Student ID', etc. The\ndefault is 'Email'.\n\nYou can set the 'position' for any configuration. The config in the 1st position\nis considered the default.\n\nFor CAS authentication services, the additional recognized parameters are:\n\n- auth_base\n\n  The CAS server's URL.\n\n- log_in_url [Optional]\n\n  An alternate SSO URL for logging into CAS. You probably should not set\n  this.\n\nFor SAML authentication services, the additional recognized parameters are:\n\n- idp_entity_id\n\n  The SAML IdP's entity ID - This is used to look up the correct SAML IdP if\n  multiple are configured\n\n- log_in_url\n\n  The SAML service's SSO target URL\n\n- log_out_url\n\n  The SAML service's SLO target URL\n\n- certificate_fingerprint\n\n  The SAML service's certificate fingerprint.\n\n- change_password_url [Optional]\n\n  Forgot Password URL. Leave blank for default Canvas behavior.\n\n- identifier_format\n\n  The SAML service's identifier format. Must be one of:\n\n  - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n  - urn:oasis:names:tc:SAML:2.0:nameid-format:entity\n  - urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos\n  - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\n  - urn:oasis:names:tc:SAML:2.0:nameid-format:transient\n  - urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\n  - urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName\n  - urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName\n\n- requested_authn_context\n\n  The SAML AuthnContext\n\nFor LDAP authentication services, the additional recognized parameters are:\n\n- auth_host\n\n  The LDAP server's URL.\n\n- auth_port [Optional, Integer]\n\n  The LDAP server's TCP port. (default: 389)\n\n- auth_over_tls [Optional]\n\n  Whether to use TLS. Can be '', 'simple_tls', or 'start_tls'. For backwards\n  compatibility, booleans are also accepted, with true meaning simple_tls.\n  If not provided, it will default to start_tls.\n\n- auth_base [Optional]\n\n  A default treebase parameter for searches performed against the LDAP\n  server.\n\n- auth_filter\n\n  LDAP search filter. Use !{{login}} as a placeholder for the username\n  supplied by the user. For example: \"(sAMAccountName=!{{login}})\".\n\n- identifier_format [Optional]\n\n  The LDAP attribute to use to look up the Canvas login. Omit to use\n  the username supplied by the user.\n\n- auth_username\n\n  Username\n\n- auth_password\n\n  Password\n\n- change_password_url [Optional]\n\n  Forgot Password URL. Leave blank for default Canvas behavior.\n\n- account_authorization_config[n] (deprecated)\n  The nth service specification as described above. For instance, the\n  auth_type of the first service is given by the\n  account_authorization_config[0][auth_type] parameter. There must be\n  either a single CAS or SAML specification, or one or more LDAP\n  specifications. Additional services after an initial CAS or SAML service\n  are ignored; additional non-LDAP services after an initial LDAP service\n  are ignored.\n\n_Deprecated_ Examples:\n\nThis endpoint still supports a deprecated version of setting the authorization configs.\nIf you send data in this format it is considered a snapshot of how the configs\nshould be setup and will clear any configs not sent.\n\nSimple CAS server integration.\n\n  account_authorization_config[0][auth_type]=cas&\n  account_authorization_config[0][auth_base]=cas.mydomain.edu\n\nSingle SAML server integration.\n\n  account_authorization_config[0][idp_entity_id]=http://idp.myschool.com/sso/saml2\n  account_authorization_config[0][log_in_url]=saml-sso.mydomain.com&\n  account_authorization_config[0][log_out_url]=saml-slo.mydomain.com&\n  account_authorization_config[0][certificate_fingerprint]=1234567890ABCDEF&\n  account_authorization_config[0][identifier_format]=urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n\nTwo SAML server integration with discovery url.\n\n  discovery_url=http://www.myschool.com/sso/identity_provider_selection\n  account_authorization_config[0][idp_entity_id]=http://idp.myschool.com/sso/saml2&\n  account_authorization_config[0][log_in_url]=saml-sso.mydomain.com&\n  account_authorization_config[0][log_out_url]=saml-slo.mydomain.com&\n  account_authorization_config[0][certificate_fingerprint]=1234567890ABCDEF&\n  account_authorization_config[0][identifier_format]=urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress&\n  account_authorization_config[1][idp_entity_id]=http://idp.otherschool.com/sso/saml2&\n  account_authorization_config[1][log_in_url]=saml-sso.otherdomain.com&\n  account_authorization_config[1][log_out_url]=saml-slo.otherdomain.com&\n  account_authorization_config[1][certificate_fingerprint]=ABCDEFG12345678789&\n  account_authorization_config[1][identifier_format]=urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n\nSingle LDAP server integration.\n\n  account_authorization_config[0][auth_type]=ldap&\n  account_authorization_config[0][auth_host]=ldap.mydomain.edu&\n  account_authorization_config[0][auth_filter]=(sAMAccountName={{login}})&\n  account_authorization_config[0][auth_username]=username&\n  account_authorization_config[0][auth_password]=password\n\nMultiple LDAP server integration.\n\n  account_authorization_config[0][auth_type]=ldap&\n  account_authorization_config[0][auth_host]=faculty-ldap.mydomain.edu&\n  account_authorization_config[0][auth_filter]=(sAMAccountName={{login}})&\n  account_authorization_config[0][auth_username]=username&\n  account_authorization_config[0][auth_password]=password&\n  account_authorization_config[1][auth_type]=ldap&\n  account_authorization_config[1][auth_host]=student-ldap.mydomain.edu&\n  account_authorization_config[1][auth_filter]=(sAMAccountName={{login}})&\n  account_authorization_config[1][auth_username]=username&\n  account_authorization_config[1][auth_password]=password",
          "nickname": "create_authorization_config",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "AccountAuthorizationConfig"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/account_authorization_configs/{id}",
      "description": "Update an authorization config using the same options as the create endpoint.\nYou can not update an existing configuration to a new authentication type.",
      "operations": [
        {
          "method": "PUT",
          "summary": "Update Authorization Config",
          "notes": "Update an authorization config using the same options as the create endpoint.\nYou can not update an existing configuration to a new authentication type.",
          "nickname": "update_authorization_config",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "AccountAuthorizationConfig"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/account_authorization_configs/{id}",
      "description": "Get the specified authorization config",
      "operations": [
        {
          "method": "GET",
          "summary": "Get Authorization Config",
          "notes": "Get the specified authorization config",
          "nickname": "get_authorization_config",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "AccountAuthorizationConfig"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/account_authorization_configs/{id}",
      "description": "Delete the config",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Delete Authorization Config",
          "notes": "Delete the config",
          "nickname": "delete_authorization_config",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "void"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/account_authorization_configs/discovery_url",
      "description": "Get the discovery url",
      "operations": [
        {
          "method": "GET",
          "summary": "GET discovery url",
          "notes": "Get the discovery url",
          "nickname": "get_discovery_url",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "DiscoveryUrl"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/account_authorization_configs/discovery_url",
      "description": "If you have multiple IdPs configured, you can set a `discovery_url`.\nIf that is set, canvas will forward all users to that URL when they need to\nbe authenticated. That page will need to then help the user figure out where\nthey need to go to log in. \n\nIf no discovery url is configured, the 1st auth config will be used to \nattempt to authenticate the user.",
      "operations": [
        {
          "method": "PUT",
          "summary": "Set discovery url",
          "notes": "If you have multiple IdPs configured, you can set a `discovery_url`.\nIf that is set, canvas will forward all users to that URL when they need to\nbe authenticated. That page will need to then help the user figure out where\nthey need to go to log in. \n\nIf no discovery url is configured, the 1st auth config will be used to \nattempt to authenticate the user.",
          "nickname": "set_discovery_url",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "DiscoveryUrl"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/account_authorization_configs/discovery_url",
      "description": "Clear discovery url",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Delete discovery url",
          "notes": "Clear discovery url",
          "nickname": "delete_discovery_url",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "void"
        }
      ]
    }
  ],
  "models": {
    "AccountAuthorizationConfig": {
      "id": "AccountAuthorizationConfig",
      "properties": {
        "login_handle_name": {
          "type": "string"
        },
        "identifier_format": {
          "type": "string"
        },
        "auth_type": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "log_out_url": {
          "type": "string"
        },
        "log_in_url": {
          "type": "string"
        },
        "certificate_fingerprint": {
          "type": "integer",
          "format": "int64"
        },
        "change_password_url": {
          "type": "string"
        },
        "requested_authn_context": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int64"
        },
        "idp_entity_id": {
          "type": "string"
        },
        "login_attribute": {
          "type": "string"
        },
        "auth_host": {
          "type": "string"
        },
        "auth_filter": {
          "type": "string"
        },
        "auth_over_tls": {
          "type": "string"
        },
        "auth_base": {
          "type": "string"
        },
        "auth_username": {
          "type": "string"
        },
        "auth_port": {
          "type": "string"
        }
      }
    },
    "DiscoveryUrl": {
      "id": "DiscoveryUrl",
      "properties": {
        "discovery_url": {
          "type": "string"
        }
      }
    }
  }
}
