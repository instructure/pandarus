{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://canvas.instructure.com/api",
  "resourcePath": "/sis imports",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/v1/accounts/{account_id}/sis_imports",
      "description": "Returns the list of SIS imports for an account\n\n  Examples:\n    curl 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports' \\ \n        -H \"Authorization: Bearer <token>\"",
      "operations": [
        {
          "method": "GET",
          "summary": "Get SIS import list",
          "notes": "Returns the list of SIS imports for an account\n\n  Examples:\n    curl 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports' \\ \n        -H \"Authorization: Bearer <token>\"",
          "nickname": "get_sis_import_list",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "array",
          "items": {
            "$ref": "SisImport"
          }
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/sis_imports",
      "description": "Import SIS data into Canvas. Must be on a root account with SIS imports\nenabled.\n\nFor more information on the format that's expected here, please see the\n\"SIS CSV\" section in the API docs.",
      "operations": [
        {
          "method": "POST",
          "summary": "Import SIS data",
          "notes": "Import SIS data into Canvas. Must be on a root account with SIS imports\nenabled.\n\nFor more information on the format that's expected here, please see the\n\"SIS CSV\" section in the API docs.",
          "nickname": "import_sis_data",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "import_type",
              "description": "Choose the data format for reading SIS data. With a standard Canvas install, this option can only be 'instructure_csv', and if unprovided, will be assumed to be so. Can be part of the query string.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "attachment",
              "description": "There are two ways to post SIS import data - either via a multipart/form-data form-field-style attachment, or via a non-multipart raw post request. 'attachment' is required for multipart/form-data style posts. Assumed to be SIS data from a file upload form field named 'attachment'. Examples: curl -F attachment=@<filename> -H \"Authorization: Bearer <token>\" \\ 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv' If you decide to do a raw post, you can skip the 'attachment' argument, but you will then be required to provide a suitable Content-Type header. You are encouraged to also provide the 'extension' argument. Examples: curl -H 'Content-Type: application/octet-stream' --data-binary @<filename>.zip \\ -H \"Authorization: Bearer <token>\" \\ 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv&extension=zip' curl -H 'Content-Type: application/zip' --data-binary @<filename>.zip \\ -H \"Authorization: Bearer <token>\" \\ 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv' curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \\ -H \"Authorization: Bearer <token>\" \\ 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv' curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \\ -H \"Authorization: Bearer <token>\" \\ 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv&batch_mode=1&batch_mode_term_id=15'",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "extension",
              "description": "Recommended for raw post request style imports. This field will be used to distinguish between zip, xml, csv, and other file format extensions that would usually be provided with the filename in the multipart post request scenario. If not provided, this value will be inferred from the Content-Type, falling back to zip-file format if all else fails.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "batch_mode",
              "description": "If set, this SIS import will be run in batch mode, deleting any data previously imported via SIS that is not present in this latest import. See the SIS CSV Format page for details.",
              "type": "boolean",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "batch_mode_term_id",
              "description": "Limit deletions to only this term. Required if batch mode is enabled.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "override_sis_stickiness",
              "description": "Many fields on records in Canvas can be marked \"sticky,\" which means that when something changes in the UI apart from the SIS, that field gets \"stuck.\" In this way, by default, SIS imports do not override UI changes. If this field is present, however, it will tell the SIS import to ignore \"stickiness\" and override all fields.",
              "type": "boolean",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "add_sis_stickiness",
              "description": "This option, if present, will process all changes as if they were UI changes. This means that \"stickiness\" will be added to changed fields. This option is only processed if 'override_sis_stickiness' is also provided.",
              "type": "boolean",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "clear_sis_stickiness",
              "description": "This option, if present, will clear \"stickiness\" from all fields touched by this import. Requires that 'override_sis_stickiness' is also provided. If 'add_sis_stickiness' is also provided, 'clear_sis_stickiness' will overrule the behavior of 'add_sis_stickiness'",
              "type": "boolean",
              "format": null,
              "required": false
            }
          ],
          "type": "SisImport"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/sis_imports/{id}",
      "description": "Get the status of an already created SIS import.\n\n  Examples:\n    curl 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports/<sis_import_id>' \\ \n        -H \"Authorization: Bearer <token>\"",
      "operations": [
        {
          "method": "GET",
          "summary": "Get SIS import status",
          "notes": "Get the status of an already created SIS import.\n\n  Examples:\n    curl 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports/<sis_import_id>' \\ \n        -H \"Authorization: Bearer <token>\"",
          "nickname": "get_sis_import_status",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "SisImport"
        }
      ]
    }
  ],
  "models": {
    "SisImport": {
      "id": "SisImport",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "created_at": {
          "type": "string"
        },
        "ended_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workflow_state": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "progress": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}
