{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://canvas.instructure.com/api",
  "resourcePath": "/files",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/v1/courses/{course_id}/files",
      "description": "Returns the paginated list of files for the folder or course.",
      "operations": [
        {
          "method": "GET",
          "summary": "List files",
          "notes": "Returns the paginated list of files for the folder or course.",
          "nickname": "list_files_courses",
          "parameters": [
            {
              "paramType": "path",
              "name": "course_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "query",
              "name": "content_types",
              "description": "Filter results by content-type. You can specify type/subtype pairs (e.g., 'image/jpeg'), or simply types (e.g., 'image', which will match 'image/gif', 'image/jpeg', etc.).",
              "type": "string",
              "format": null,
              "required": false,
              "tags": {
                "type": "array"
              }
            },
            {
              "paramType": "query",
              "name": "search_term",
              "description": "The partial name of the files to match and return.",
              "type": "string",
              "format": null,
              "required": false
            }
          ],
          "type": "array",
          "items": {
            "$ref": "File"
          }
        }
      ]
    },
    {
      "path": "/v1/folders/{id}/files",
      "description": "Returns the paginated list of files for the folder or course.",
      "operations": [
        {
          "method": "GET",
          "summary": "List files",
          "notes": "Returns the paginated list of files for the folder or course.",
          "nickname": "list_files_folders",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "query",
              "name": "content_types",
              "description": "Filter results by content-type. You can specify type/subtype pairs (e.g., 'image/jpeg'), or simply types (e.g., 'image', which will match 'image/gif', 'image/jpeg', etc.).",
              "type": "string",
              "format": null,
              "required": false,
              "tags": {
                "type": "array"
              }
            },
            {
              "paramType": "query",
              "name": "search_term",
              "description": "The partial name of the files to match and return.",
              "type": "string",
              "format": null,
              "required": false
            }
          ],
          "type": "array",
          "items": {
            "$ref": "File"
          }
        }
      ]
    },
    {
      "path": "/v1/files/{id}",
      "description": "Returns the standard attachment json object",
      "operations": [
        {
          "method": "GET",
          "summary": "Get file",
          "notes": "Returns the standard attachment json object",
          "nickname": "get_file",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "File"
        }
      ]
    },
    {
      "path": "/v1/files/{id}",
      "description": "Update some settings on the specified file",
      "operations": [
        {
          "method": "PUT",
          "summary": "Update file",
          "notes": "Update some settings on the specified file",
          "nickname": "update_file",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "description": "The new display name of the file",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "parent_folder_id",
              "description": "The id of the folder to move this file into. The new folder must be in the same context as the original parent folder. If the file is in a context without folders this does not apply.",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "lock_at",
              "description": "The datetime to lock the file at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "unlock_at",
              "description": "The datetime to unlock the file at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "locked",
              "description": "Flag the file as locked",
              "type": "boolean",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "hidden",
              "description": "Flag the file as hidden",
              "type": "boolean",
              "format": null,
              "required": true
            }
          ],
          "type": "File"
        }
      ]
    },
    {
      "path": "/v1/files/{id}",
      "description": "Remove the specified file\n\n  curl -XDELETE 'https://<canvas>/api/v1/files/<file_id>' \\ \n       -H 'Authorization: Bearer <token>'",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Delete file",
          "notes": "Remove the specified file\n\n  curl -XDELETE 'https://<canvas>/api/v1/files/<file_id>' \\ \n       -H 'Authorization: Bearer <token>'",
          "nickname": "delete_file",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "void"
        }
      ]
    },
    {
      "path": "/v1/folders/{id}/folders",
      "description": "Returns the paginated list of folders in the folder.",
      "operations": [
        {
          "method": "GET",
          "summary": "List folders",
          "notes": "Returns the paginated list of folders in the folder.",
          "nickname": "list_folders",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "array",
          "items": {
            "$ref": "Folder"
          }
        }
      ]
    },
    {
      "path": "/v1/courses/{course_id}/folders/{id}",
      "description": "Returns the details for a folder\n\nYou can get the root folder from a context by using 'root' as the :id.\nFor example, you could get the root folder for a course like:",
      "operations": [
        {
          "method": "GET",
          "summary": "Get folder",
          "notes": "Returns the details for a folder\n\nYou can get the root folder from a context by using 'root' as the :id.\nFor example, you could get the root folder for a course like:",
          "nickname": "get_folder_courses",
          "parameters": [
            {
              "paramType": "path",
              "name": "course_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "Folder"
        }
      ]
    },
    {
      "path": "/v1/users/{user_id}/folders/{id}",
      "description": "Returns the details for a folder\n\nYou can get the root folder from a context by using 'root' as the :id.\nFor example, you could get the root folder for a course like:",
      "operations": [
        {
          "method": "GET",
          "summary": "Get folder",
          "notes": "Returns the details for a folder\n\nYou can get the root folder from a context by using 'root' as the :id.\nFor example, you could get the root folder for a course like:",
          "nickname": "get_folder_users",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "Folder"
        }
      ]
    },
    {
      "path": "/v1/groups/{group_id}/folders/{id}",
      "description": "Returns the details for a folder\n\nYou can get the root folder from a context by using 'root' as the :id.\nFor example, you could get the root folder for a course like:",
      "operations": [
        {
          "method": "GET",
          "summary": "Get folder",
          "notes": "Returns the details for a folder\n\nYou can get the root folder from a context by using 'root' as the :id.\nFor example, you could get the root folder for a course like:",
          "nickname": "get_folder_groups",
          "parameters": [
            {
              "paramType": "path",
              "name": "group_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "Folder"
        }
      ]
    },
    {
      "path": "/v1/folders/{id}",
      "description": "Returns the details for a folder\n\nYou can get the root folder from a context by using 'root' as the :id.\nFor example, you could get the root folder for a course like:",
      "operations": [
        {
          "method": "GET",
          "summary": "Get folder",
          "notes": "Returns the details for a folder\n\nYou can get the root folder from a context by using 'root' as the :id.\nFor example, you could get the root folder for a course like:",
          "nickname": "get_folder_folders",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "Folder"
        }
      ]
    },
    {
      "path": "/v1/folders/{id}",
      "description": "Updates a folder",
      "operations": [
        {
          "method": "PUT",
          "summary": "Update folder",
          "notes": "Updates a folder",
          "nickname": "update_folder",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "description": "The new name of the folder",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "parent_folder_id",
              "description": "The id of the folder to move this folder into. The new folder must be in the same context as the original parent folder.",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "lock_at",
              "description": "The datetime to lock the folder at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "unlock_at",
              "description": "The datetime to unlock the folder at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "locked",
              "description": "Flag the folder as locked",
              "type": "boolean",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "hidden",
              "description": "Flag the folder as hidden",
              "type": "boolean",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "position",
              "description": "Set an explicit sort position for the folder",
              "type": "integer",
              "format": "int64",
              "required": true
            }
          ],
          "type": "Folder"
        }
      ]
    },
    {
      "path": "/v1/courses/{course_id}/folders",
      "description": "Creates a folder in the specified context",
      "operations": [
        {
          "method": "POST",
          "summary": "Create folder",
          "notes": "Creates a folder in the specified context",
          "nickname": "create_folder_courses",
          "parameters": [
            {
              "paramType": "path",
              "name": "course_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "description": "The name of the folder",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "parent_folder_id",
              "description": "The id of the folder to store the file in. If this and parent_folder_path are sent an error will be returned. If neither is given, a default folder will be used.",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "parent_folder_path",
              "description": "The path of the folder to store the new folder in. The path separator is the forward slash `/`, never a back slash. The parent folder will be created if it does not already exist. This parameter only applies to new folders in a context that has folders, such as a user, a course, or a group. If this and parent_folder_id are sent an error will be returned. If neither is given, a default folder will be used.",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "lock_at",
              "description": "The datetime to lock the folder at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "unlock_at",
              "description": "The datetime to unlock the folder at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "locked",
              "description": "Flag the folder as locked",
              "type": "boolean",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "hidden",
              "description": "Flag the folder as hidden",
              "type": "boolean",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "position",
              "description": "Set an explicit sort position for the folder",
              "type": "integer",
              "format": "int64",
              "required": true
            }
          ],
          "type": "Folder"
        }
      ]
    },
    {
      "path": "/v1/users/{user_id}/folders",
      "description": "Creates a folder in the specified context",
      "operations": [
        {
          "method": "POST",
          "summary": "Create folder",
          "notes": "Creates a folder in the specified context",
          "nickname": "create_folder_users",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "description": "The name of the folder",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "parent_folder_id",
              "description": "The id of the folder to store the file in. If this and parent_folder_path are sent an error will be returned. If neither is given, a default folder will be used.",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "parent_folder_path",
              "description": "The path of the folder to store the new folder in. The path separator is the forward slash `/`, never a back slash. The parent folder will be created if it does not already exist. This parameter only applies to new folders in a context that has folders, such as a user, a course, or a group. If this and parent_folder_id are sent an error will be returned. If neither is given, a default folder will be used.",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "lock_at",
              "description": "The datetime to lock the folder at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "unlock_at",
              "description": "The datetime to unlock the folder at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "locked",
              "description": "Flag the folder as locked",
              "type": "boolean",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "hidden",
              "description": "Flag the folder as hidden",
              "type": "boolean",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "position",
              "description": "Set an explicit sort position for the folder",
              "type": "integer",
              "format": "int64",
              "required": true
            }
          ],
          "type": "Folder"
        }
      ]
    },
    {
      "path": "/v1/groups/{group_id}/folders",
      "description": "Creates a folder in the specified context",
      "operations": [
        {
          "method": "POST",
          "summary": "Create folder",
          "notes": "Creates a folder in the specified context",
          "nickname": "create_folder_groups",
          "parameters": [
            {
              "paramType": "path",
              "name": "group_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "description": "The name of the folder",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "parent_folder_id",
              "description": "The id of the folder to store the file in. If this and parent_folder_path are sent an error will be returned. If neither is given, a default folder will be used.",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "parent_folder_path",
              "description": "The path of the folder to store the new folder in. The path separator is the forward slash `/`, never a back slash. The parent folder will be created if it does not already exist. This parameter only applies to new folders in a context that has folders, such as a user, a course, or a group. If this and parent_folder_id are sent an error will be returned. If neither is given, a default folder will be used.",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "lock_at",
              "description": "The datetime to lock the folder at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "unlock_at",
              "description": "The datetime to unlock the folder at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "locked",
              "description": "Flag the folder as locked",
              "type": "boolean",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "hidden",
              "description": "Flag the folder as hidden",
              "type": "boolean",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "position",
              "description": "Set an explicit sort position for the folder",
              "type": "integer",
              "format": "int64",
              "required": true
            }
          ],
          "type": "Folder"
        }
      ]
    },
    {
      "path": "/v1/folders/{folder_id}/folders",
      "description": "Creates a folder in the specified context",
      "operations": [
        {
          "method": "POST",
          "summary": "Create folder",
          "notes": "Creates a folder in the specified context",
          "nickname": "create_folder_folders",
          "parameters": [
            {
              "paramType": "path",
              "name": "folder_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "description": "The name of the folder",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "parent_folder_id",
              "description": "The id of the folder to store the file in. If this and parent_folder_path are sent an error will be returned. If neither is given, a default folder will be used.",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "parent_folder_path",
              "description": "The path of the folder to store the new folder in. The path separator is the forward slash `/`, never a back slash. The parent folder will be created if it does not already exist. This parameter only applies to new folders in a context that has folders, such as a user, a course, or a group. If this and parent_folder_id are sent an error will be returned. If neither is given, a default folder will be used.",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "lock_at",
              "description": "The datetime to lock the folder at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "unlock_at",
              "description": "The datetime to unlock the folder at",
              "type": "datetime",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "locked",
              "description": "Flag the folder as locked",
              "type": "boolean",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "hidden",
              "description": "Flag the folder as hidden",
              "type": "boolean",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "position",
              "description": "Set an explicit sort position for the folder",
              "type": "integer",
              "format": "int64",
              "required": true
            }
          ],
          "type": "Folder"
        }
      ]
    },
    {
      "path": "/v1/folders/{id}",
      "description": "Remove the specified folder. You can only delete empty folders unless you\nset the 'force' flag",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Delete folder",
          "notes": "Remove the specified folder. You can only delete empty folders unless you\nset the 'force' flag",
          "nickname": "delete_folder",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "query",
              "name": "force",
              "description": "Set to 'true' to allow deleting a non-empty folder",
              "type": "boolean",
              "format": null,
              "required": true
            }
          ],
          "type": "void"
        }
      ]
    },
    {
      "path": "/v1/folders/{folder_id}/files",
      "description": "Upload a file to a folder.\n\nThis API endpoint is the first step in uploading a file.\nSee the {file:file_uploads.html File Upload Documentation} for details on\nthe file upload workflow.\n\nOnly those with the \"Manage Files\" permission on a course or group can\nupload files to a folder in that course or group.",
      "operations": [
        {
          "method": "POST",
          "summary": "Upload a file",
          "notes": "Upload a file to a folder.\n\nThis API endpoint is the first step in uploading a file.\nSee the {file:file_uploads.html File Upload Documentation} for details on\nthe file upload workflow.\n\nOnly those with the \"Manage Files\" permission on a course or group can\nupload files to a folder in that course or group.",
          "nickname": "upload_file",
          "parameters": [
            {
              "paramType": "path",
              "name": "folder_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "void"
        }
      ]
    }
  ],
  "models": {
    "File": {
      "id": "File",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "content-type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "display_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "unlock_at": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "lock_at": {
          "type": "string"
        },
        "locked_for_user": {
          "type": "boolean"
        },
        "lock_info": {
          "type": "string"
        },
        "lock_explanation": {
          "type": "string"
        },
        "hidden_for_user": {
          "type": "boolean"
        },
        "thumbnail_url": {
          "type": "string"
        }
      }
    },
    "Folder": {
      "id": "Folder",
      "properties": {
        "context_type": {
          "type": "string"
        },
        "context_id": {
          "type": "integer",
          "format": "int64"
        },
        "files_count": {
          "type": "integer",
          "format": "int64"
        },
        "position": {
          "type": "integer",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "folders_url": {
          "type": "string"
        },
        "files_url": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "lock_at": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "folders_count": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "parent_folder_id": {
          "type": "integer",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "unlock_at": {
          "type": "string"
        },
        "hidden": {
          "type": "string"
        },
        "hidden_for_user": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "locked_for_user": {
          "type": "boolean"
        }
      }
    }
  }
}
